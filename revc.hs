input = "CAGTTCGTTTTGGTACAGCCACGAGCCCACGCCCGGCTGGATCGCACCAAAGACCATGCGACGAAACTACATACCGGTGATTTCTTCAGAGACCAACCCGATCGGGTCATCCTGGTCATTGCGCGCCCCGCGACGTCACCATTCTCTGGTGACTCTCATTCTAAAAGTAACTCCAGCATAGCAATATTCCCACTACGCATGAGACGAATTGGTTGAAGATGATATGTCAGAGATCCTTCCTCTCCACCGGATAATCAGGATGTGTTAAGTCAGGTCGGCTGACGTACCCAGATGAGAGCACAAACCCTACTATCAAAATATGTGTACCTGAGTATTCGACAGACTGAGCTAAGATGTAGACGTAGCTTTACAAGCGGTACCTAGCCTATTACCTTCCAGATGGATCATACACCTCCTCTACTGTAGAGGATCACTGCGTATCTTGGCACTATAACTCCGGTAGCTGTCGATGCTGTGTAAAGTAGCTGCTAAGGATCACTGTGTCTGTGCAAACACGTTCGTTAGGAGTCAGATAACTAGGGGACCCGGCAGAAAGATGGTTCGGAATGCCGCAAAGATATCTAAACGTGGTTAATGTGACCTTTACGTGATGCCGCTCTCGCCTGTATAGGTAGTCGGCGTAGGCACAGAGGTCCGTATTCCACGCACTTGCGGGAGGGTGTTTTCCTCGCACCTGAACTAATATCAATTTAAAATCGCTGCTATTAAGAGCCCGGCACCTGCGGCTGAAATTAGGTTTAGGACGGCGCCCTGGCGGCTCAAGAGCGCACGCTGCGGTCTGCCTTATAAAATGGATTAGCCTTCCACGATTGCAGTTCGGTATTGCCCACTGTTGTTCTAGAACCCGGAGGCGGCGCTAGCGGCTTCTCTATGGGGGTAACACAGTAACCCGCAAACTGCTACACTTAGGTCGTTGGACATCCCCCTTCGCTTCGCAG"

compliment :: Char -> Char
compliment 'A' = 'T'
compliment 'T' = 'A'
compliment 'C' = 'G'
compliment 'G' = 'C'
compliment x = x

main = do
  putStrLn (map compliment (reverse input))
